vector<vector<int>> verticalTraversal(TreeNode* root) {
    vector<vector<int>> ans;
    if(root==NULL)  return ans;
        
    map<int, map<int, multiset<int>>> mp;
    queue<pair<TreeNode*, pair<int, int>>> q;
    q.push({root, {0, 0}});
        
    while(!q.empty()){
        auto p = q.front();
        TreeNode *node = p.first;
        q.pop();
        int x = p.second.first, y = p.second.second;
        mp[x][y].insert(node->val);
        if(node->left)  q.push({node->left, {x-1, y+1}});
        if(node->right)  q.push({node->right, {x+1, y+1}});
    }
        
    for(auto it :  mp){
        vector<int> sub;
        for(auto it2 : it.second){
            sub.insert(sub.end(), it2.second.begin(), it2.second.end());
        }
        ans.push_back(sub);
    }
        
    return ans;
}